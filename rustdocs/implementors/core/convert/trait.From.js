(function() {var implementors = {};
implementors["linfa"] = [{"text":"impl&lt;F:&nbsp;Float, D:&nbsp;Data&lt;Elem = F&gt;, I:&nbsp;Dimension&gt; From&lt;ArrayBase&lt;D, I&gt;&gt; for DatasetBase&lt;ArrayBase&lt;D, I&gt;, Array2&lt;()&gt;&gt;","synthetic":false,"types":[]},{"text":"impl&lt;F:&nbsp;Float, E, D, S&gt; From&lt;(ArrayBase&lt;D, Dim&lt;[usize; 2]&gt;&gt;, ArrayBase&lt;S, Dim&lt;[usize; 2]&gt;&gt;)&gt; for DatasetBase&lt;ArrayBase&lt;D, Ix2&gt;, ArrayBase&lt;S, Ix2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Data&lt;Elem = F&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Data&lt;Elem = E&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;F:&nbsp;Float, E, D, S&gt; From&lt;(ArrayBase&lt;D, Dim&lt;[usize; 2]&gt;&gt;, ArrayBase&lt;S, Dim&lt;[usize; 1]&gt;&gt;)&gt; for DatasetBase&lt;ArrayBase&lt;D, Ix2&gt;, ArrayBase&lt;S, Ix2&gt;&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Data&lt;Elem = F&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Data&lt;Elem = E&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl From&lt;ShapeError&gt; for Error","synthetic":false,"types":[]}];
implementors["linfa_bayes"] = [{"text":"impl From&lt;MinMaxError&gt; for BayesError","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for BayesError","synthetic":false,"types":[]}];
implementors["linfa_clustering"] = [{"text":"impl From&lt;LinalgError&gt; for GmmError","synthetic":false,"types":[]},{"text":"impl From&lt;KMeansError&gt; for GmmError","synthetic":false,"types":[]}];
implementors["linfa_elasticnet"] = [{"text":"impl From&lt;Error&gt; for Error","synthetic":false,"types":[]}];
implementors["linfa_ica"] = [{"text":"impl From&lt;LinalgError&gt; for FastIcaError","synthetic":false,"types":[]}];
implementors["linfa_linear"] = [{"text":"impl From&lt;Error&gt; for LinearError","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for LinearError","synthetic":false,"types":[]}];
implementors["linfa_pls"] = [{"text":"impl From&lt;LinalgError&gt; for PlsError","synthetic":false,"types":[]}];
implementors["linfa_svm"] = [{"text":"impl From&lt;Error&gt; for SvmResult","synthetic":false,"types":[]}];
implementors["linfa_tsne"] = [{"text":"impl From&lt;ShapeError&gt; for TSneError","synthetic":false,"types":[]},{"text":"impl From&lt;Error&gt; for TSneError","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()
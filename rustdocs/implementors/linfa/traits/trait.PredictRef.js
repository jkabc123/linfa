(function() {var implementors = {};
implementors["linfa"] = [];
implementors["linfa_clustering"] = [{"text":"impl&lt;F:&nbsp;Float + Lapack + Scalar, D:&nbsp;Data&lt;Elem = F&gt;&gt; PredictRef&lt;ArrayBase&lt;D, Dim&lt;[usize; 2]&gt;&gt;, ArrayBase&lt;OwnedRepr&lt;usize&gt;, Dim&lt;[usize; 1]&gt;&gt;&gt; for GaussianMixtureModel&lt;F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;F:&nbsp;Float, D:&nbsp;Data&lt;Elem = F&gt;&gt; PredictRef&lt;ArrayBase&lt;D, Dim&lt;[usize; 2]&gt;&gt;, ArrayBase&lt;OwnedRepr&lt;usize&gt;, Dim&lt;[usize; 1]&gt;&gt;&gt; for KMeans&lt;F&gt;","synthetic":false,"types":[]}];
implementors["linfa_elasticnet"] = [{"text":"impl&lt;F:&nbsp;Float, D:&nbsp;Data&lt;Elem = F&gt;&gt; PredictRef&lt;ArrayBase&lt;D, Dim&lt;[usize; 2]&gt;&gt;, ArrayBase&lt;OwnedRepr&lt;F&gt;, Dim&lt;[usize; 1]&gt;&gt;&gt; for ElasticNet&lt;F&gt;","synthetic":false,"types":[]}];
implementors["linfa_ica"] = [{"text":"impl&lt;F:&nbsp;Float&gt; PredictRef&lt;ArrayBase&lt;OwnedRepr&lt;F&gt;, Dim&lt;[usize; 2]&gt;&gt;, ArrayBase&lt;OwnedRepr&lt;F&gt;, Dim&lt;[usize; 2]&gt;&gt;&gt; for FittedFastIca&lt;F&gt;","synthetic":false,"types":[]}];
implementors["linfa_linear"] = [{"text":"impl&lt;A:&nbsp;Float, D:&nbsp;Data&lt;Elem = A&gt;&gt; PredictRef&lt;ArrayBase&lt;D, Dim&lt;[usize; 2]&gt;&gt;, ArrayBase&lt;OwnedRepr&lt;A&gt;, Dim&lt;[usize; 1]&gt;&gt;&gt; for FittedTweedieRegressor&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;F:&nbsp;Float, D:&nbsp;Data&lt;Elem = F&gt;&gt; PredictRef&lt;ArrayBase&lt;D, Dim&lt;[usize; 2]&gt;&gt;, ArrayBase&lt;OwnedRepr&lt;F&gt;, Dim&lt;[usize; 1]&gt;&gt;&gt; for FittedLinearRegression&lt;F&gt;","synthetic":false,"types":[]}];
implementors["linfa_logistic"] = [{"text":"impl&lt;C:&nbsp;PartialOrd + Clone, F:&nbsp;Float, D:&nbsp;Data&lt;Elem = F&gt;&gt; PredictRef&lt;ArrayBase&lt;D, Dim&lt;[usize; 2]&gt;&gt;, ArrayBase&lt;OwnedRepr&lt;C&gt;, Dim&lt;[usize; 1]&gt;&gt;&gt; for FittedLogisticRegression&lt;F, C&gt;","synthetic":false,"types":[]}];
implementors["linfa_pls"] = [{"text":"impl&lt;F:&nbsp;Float, D:&nbsp;Data&lt;Elem = F&gt;&gt; PredictRef&lt;ArrayBase&lt;D, Dim&lt;[usize; 2]&gt;&gt;, ArrayBase&lt;OwnedRepr&lt;F&gt;, Dim&lt;[usize; 2]&gt;&gt;&gt; for PlsRegression&lt;F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;F:&nbsp;Float, D:&nbsp;Data&lt;Elem = F&gt;&gt; PredictRef&lt;ArrayBase&lt;D, Dim&lt;[usize; 2]&gt;&gt;, ArrayBase&lt;OwnedRepr&lt;F&gt;, Dim&lt;[usize; 2]&gt;&gt;&gt; for PlsCanonical&lt;F&gt;","synthetic":false,"types":[]},{"text":"impl&lt;F:&nbsp;Float, D:&nbsp;Data&lt;Elem = F&gt;&gt; PredictRef&lt;ArrayBase&lt;D, Dim&lt;[usize; 2]&gt;&gt;, ArrayBase&lt;OwnedRepr&lt;F&gt;, Dim&lt;[usize; 2]&gt;&gt;&gt; for PlsCca&lt;F&gt;","synthetic":false,"types":[]}];
implementors["linfa_reduction"] = [{"text":"impl&lt;F:&nbsp;Float, D:&nbsp;Data&lt;Elem = F&gt;&gt; PredictRef&lt;ArrayBase&lt;D, Dim&lt;[usize; 2]&gt;&gt;, ArrayBase&lt;OwnedRepr&lt;F&gt;, Dim&lt;[usize; 2]&gt;&gt;&gt; for Pca&lt;F&gt;","synthetic":false,"types":[]}];
implementors["linfa_svm"] = [{"text":"impl&lt;F:&nbsp;Float, D:&nbsp;Data&lt;Elem = F&gt;&gt; PredictRef&lt;ArrayBase&lt;D, Dim&lt;[usize; 2]&gt;&gt;, ArrayBase&lt;OwnedRepr&lt;Pr&gt;, Dim&lt;[usize; 1]&gt;&gt;&gt; for Svm&lt;F, Pr&gt;","synthetic":false,"types":[]},{"text":"impl&lt;D:&nbsp;Data&lt;Elem = f32&gt;&gt; PredictRef&lt;ArrayBase&lt;D, Dim&lt;[usize; 2]&gt;&gt;, ArrayBase&lt;OwnedRepr&lt;f32&gt;, Dim&lt;[usize; 1]&gt;&gt;&gt; for Svm&lt;f32, f32&gt;","synthetic":false,"types":[]},{"text":"impl&lt;D:&nbsp;Data&lt;Elem = f64&gt;&gt; PredictRef&lt;ArrayBase&lt;D, Dim&lt;[usize; 2]&gt;&gt;, ArrayBase&lt;OwnedRepr&lt;f64&gt;, Dim&lt;[usize; 1]&gt;&gt;&gt; for Svm&lt;f64, f64&gt;","synthetic":false,"types":[]}];
implementors["linfa_trees"] = [{"text":"impl&lt;F:&nbsp;Float, L:&nbsp;Label, D:&nbsp;Data&lt;Elem = F&gt;&gt; PredictRef&lt;ArrayBase&lt;D, Dim&lt;[usize; 2]&gt;&gt;, ArrayBase&lt;OwnedRepr&lt;L&gt;, Dim&lt;[usize; 1]&gt;&gt;&gt; for DecisionTree&lt;F, L&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()